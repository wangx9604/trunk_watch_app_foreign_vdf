package com.xiaoxun.xun.adapter;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.support.v7.widget.RecyclerView;
import android.text.ClipboardManager;
import android.text.TextUtils;
import android.view.Gravity;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.xiaoxun.xun.Const;
import com.xiaoxun.xun.ImibabyApp;
import com.xiaoxun.xun.R;
import com.xiaoxun.xun.activitys.ChatPopupWindow;
import com.xiaoxun.xun.beans.NoticeMsgData;
import com.xiaoxun.xun.beans.PhoneNumber;
import com.xiaoxun.xun.beans.WatchData;
import com.xiaoxun.xun.db.NoticeMsgHisDAO;
import com.xiaoxun.xun.utils.CloudBridgeUtil;
import com.xiaoxun.xun.utils.DialogUtil;
import com.xiaoxun.xun.utils.StrUtil;
import com.xiaoxun.xun.utils.TimeUtil;
import com.xiaoxun.xun.utils.ToastUtil;

import net.minidev.json.JSONObject;
import net.minidev.json.JSONValue;


/**
 * Created by huangqilin on 2016/7/25.
 */
public class NormalNoticeItemHolder extends RecyclerView.ViewHolder implements RecyclerItemHolder {
    private Activity mActivity;
    private LinearLayout mTimeLy;
    private TextView mDate;
    private TextView mTime;
    private TextView mContentTxt;
    private ImageView mIconView;
    private RelativeLayout mContent;
    private ChatPopupWindow mMenuWindow;

    public NormalNoticeItemHolder(View view, Activity activity) {
        super(view);
        mTimeLy = view.findViewById(R.id.time_ly);
        mDate = view.findViewById(R.id.time_txt);
        mTime = view.findViewById(R.id.time);
        mContentTxt = view.findViewById(R.id.text_content);
        mIconView = view.findViewById(R.id.icon_view);
        mContent = view.findViewById(R.id.content);
        mActivity = activity;
    }

    @Override
    public void bindTo(final NoticeMsgData msg, String time) {
        if (time.equals(Const.DEFAULT_NEXT_KEY)
                || !TimeUtil.getDay(msg.getmTimeStamp()).equals(TimeUtil.getDay(time))) { //显示日期
            mTimeLy.setVisibility(View.VISIBLE);
            mDate.setText(TimeUtil.getDay(TimeUtil.chnToLocalTimestamp(msg.getmTimeStamp())));
        } else {
            mTimeLy.setVisibility(View.GONE);
        }

        if (msg.getmType() == NoticeMsgData.MSG_TYPE_FAMILY_CHANGE) {
            mIconView.setBackgroundResource(R.drawable.set_up_icon);
            String name = msg.getmContent().substring(0, msg.getmContent().lastIndexOf("_"));
            String type = msg.getmContent().substring(msg.getmContent().lastIndexOf("_") + 1);
            if (type.equals("1")) {
                mContentTxt.setText(mActivity.getString(R.string.join_family, name));
            } else if (type.equals("2")) {
                mContentTxt.setText(mActivity.getString(R.string.quit_from_family, name));
            } else if (type.equals("4")) {
                mContentTxt.setText(mActivity.getString(R.string.become_family_admin, name));
            }
        } else if (msg.getmType() == NoticeMsgData.MSG_TYPE_CLOUD_SPACE) {
            mIconView.setBackgroundResource(R.drawable.cloud_space);
            mContentTxt.setText(mActivity.getString(R.string.cloud_space_tips, msg.getmContent()));
        } else if (msg.getmType() == NoticeMsgData.MSG_TYPE_BATTERY_WARNNING) {
            mIconView.setBackgroundResource(R.drawable.low_power_icon);
            ImibabyApp app = (ImibabyApp)(mActivity.getApplication());
            WatchData watch = app.getCurUser().queryWatchDataByEid(msg.getmSrcid());
            String messageContent;
            if (watch.isWatch()) {
                messageContent = mActivity.getString(R.string.battery_notification, watch.getNickname(), msg.getmContent() + "%");
            } else {
                messageContent = mActivity.getString(R.string.battery_notification_device, watch.getNickname(), msg.getmContent() + "%");
            }
            mContentTxt.setText(messageContent);
        } else if (msg.getmType() == NoticeMsgData.MSG_TYPE_STAEPS) {
            mIconView.setBackgroundResource(R.drawable.sports_icon);
            int curSteps = Integer.valueOf(msg.getmContent().substring(0, msg.getmContent().indexOf("_")));
            int targetSteps = Integer.valueOf(msg.getmContent().substring(msg.getmContent().indexOf("_") + 1));
            if (curSteps > targetSteps / 2 && curSteps < targetSteps) {
                mContentTxt.setText(mActivity.getString(R.string.steps_notice_half_end,
                        ((ImibabyApp) mActivity.getApplication()).getCurUser().queryNicknameByEid(msg.getmSrcid()),
                        curSteps));
            } else {
                mContentTxt.setText(mActivity.getString(R.string.steps_notice_finish_end,
                        ((ImibabyApp) mActivity.getApplication()).getCurUser().queryNicknameByEid(msg.getmSrcid()),
                        curSteps));
            }
        } else if (msg.getmType() == NoticeMsgData.MSG_TYPE_CHANGE_SIM) {
            mIconView.setBackgroundResource(R.drawable.set_up_icon);
            JSONObject con = (JSONObject) JSONValue.parse(msg.getmContent());
            ImibabyApp app = (ImibabyApp)(mActivity.getApplication());
            WatchData watch = app.getCurUser().queryWatchDataByEid(msg.getmSrcid());
            String messageContent;
            if (con.get("SimNo") != null && con.get("SimNo").toString().length() > 0) {
                if (watch.isWatch()) {
                    messageContent = mActivity.getString(R.string.sim_changed, watch.getNickname(), con.get("SimNo").toString());
                } else {
                    messageContent = mActivity.getString(R.string.device_sim_changed, watch.getNickname(), con.get("SimNo").toString());
                }
            } else {
                if (watch.isWatch()) {
                    messageContent = mActivity.getString(R.string.sim_changed, watch.getNickname(), "");
                } else {
                    messageContent = mActivity.getString(R.string.device_sim_changed, watch.getNickname(), "");
                }
            }
            mContentTxt.setText(messageContent);

        } else if (msg.getmType() == NoticeMsgData.MSG_TYPE_SMS) {
            mIconView.setBackgroundResource(R.drawable.message_icon);
            String address = msg.getmContent().substring(0, msg.getmContent().indexOf(" "));
            String body = msg.getmContent().substring(msg.getmContent().indexOf(" "));
            String name = "";
            PhoneNumber phoneNumber = ((ImibabyApp) mActivity.getApplication()).getPhoneWhiteDataByNumber(msg.getmSrcid(), address);
            if (phoneNumber != null && !TextUtils.isEmpty(phoneNumber.nickname)) {
                name = "(" + phoneNumber.nickname + ")";
            }
            mContentTxt.setText(address + name + body);
        } else if (msg.getmType() == NoticeMsgData.MSG_TYPE_FLOWMETER) {
            mIconView.setBackgroundResource(R.drawable.msg_flow_icon);
            String messageContent;
            String flowmeters[] = msg.getmContent().split("_");
            double total = Double.valueOf(flowmeters[0]);
            double current = Double.valueOf(flowmeters[1]);
            if (current < total) {
                messageContent = mActivity.getString(R.string.flowmeter_tips, ((ImibabyApp) mActivity.getApplication()).getCurUser().queryNicknameByEid(msg.getmSrcid()), StrUtil.flowmeterChange(current, true), StrUtil.flowmeterChange(total, false));
            } else {
                messageContent = mActivity.getString(R.string.flowmeter_tips_over, ((ImibabyApp) mActivity.getApplication()).getCurUser().queryNicknameByEid(msg.getmSrcid()), StrUtil.flowmeterChange(total, false), StrUtil.flowmeterChange(current, true));
            }
            mContentTxt.setText(messageContent);
        } else if (msg.getmType() == NoticeMsgData.MSG_TYPE_OTA_UPGRADE) {
            mIconView.setBackgroundResource(R.drawable.msg_ota_upgrade);
            mContentTxt.setText(msg.getmContent());
        } else if (msg.getmType() == NoticeMsgData.MSG_TYPE_OTA_UPGRADE_EX) {
            mIconView.setBackgroundResource(R.drawable.msg_ota_upgrade);
            JSONObject otaContent = (JSONObject) JSONValue.parse(msg.getmContent());
            String subType = (String) otaContent.get(CloudBridgeUtil.KEY_NAME_SUBTYPE);
            String messageContent = msg.getmContent();
            if (subType.equals("1")) {
                messageContent = (String) otaContent.get(CloudBridgeUtil.E2C_PL_KEY_TYPE_TEXT);
            }
            mContentTxt.setText(messageContent);
        } else if (msg.getmType() == NoticeMsgData.MSG_TYPE_APPMANAGER) {
            // TODO: 2019/3/14 换图标 
            mIconView.setBackgroundResource(R.drawable.download_icon);
            mContentTxt.setText(msg.getmContent());
        }
        mTime.setText(TimeUtil.getTimeHHMM(msg.getmTimeStamp()));

        mContentTxt.setOnLongClickListener(new View.OnLongClickListener() {
            @Override
            public boolean onLongClick(View v) {
                mMenuWindow = new ChatPopupWindow(mActivity, new View.OnClickListener() {

                    public void onClick(View v) {
                        mMenuWindow.dismiss();
                        msg.setmStatus(NoticeMsgData.MSG_STATUS_DELETE);
                        NoticeMsgHisDAO.getInstance(mActivity.getApplicationContext()).updateNoticeMsg(msg.getmGroupid(), ((ImibabyApp) mActivity.getApplication()).getCurUser().getEid(), msg, msg.getmTimeStamp());
                        Intent intent = new Intent(Const.ACTION_CLEAR_NOTICE_MESSAGE);
                        intent.putExtra(AllMessageAdapter.MESSAGE_TYPE, AllMessageAdapter.noticeMsgTypeToNoticeType(msg.getmType()));
                        mActivity.sendBroadcast(intent);
                    }
                }, new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        mMenuWindow.dismiss();
                        DialogUtil.CustomALertDialog(mActivity, mActivity.getString(R.string.clear_messge_title),
                                mActivity.getString(R.string.clear_message_text), new DialogUtil.OnCustomDialogListener() {
                                    @Override
                                    public void onClick(View v) {

                                    }
                                }, mActivity.getString(R.string.cancel),
                                new DialogUtil.OnCustomDialogListener() {
                                    @Override
                                    public void onClick(View v) {
                                        NoticeMsgHisDAO.getInstance(mActivity.getApplicationContext()).deleteAllMsg(msg.getmGroupid(), ((ImibabyApp) mActivity.getApplication()).getCurUser().getEid());
                                        Intent intent = new Intent(Const.ACTION_CLEAR_NOTICE_MESSAGE);
                                        intent.putExtra(AllMessageAdapter.MESSAGE_TYPE, AllMessageAdapter.MESSAGE_TYPE_ALL);
                                        mActivity.sendBroadcast(intent);
                                    }
                                }, mActivity.getString(R.string.confirm)).show();

                    }
                }, null, new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        mMenuWindow.dismiss();
                        ClipboardManager clip = (ClipboardManager) mActivity.getSystemService(Context.CLIPBOARD_SERVICE);
                        clip.setText(mContentTxt.getText());
                        ToastUtil.showMyToast(mActivity, mActivity.getString(R.string.copy_success), Toast.LENGTH_SHORT);
                    }
                });
                //显示窗口
                mMenuWindow.showAtLocation(mActivity.findViewById(R.id.notice_message_layout), Gravity.CENTER, 0, 0);
                return false;
            }
        });
    }
}
