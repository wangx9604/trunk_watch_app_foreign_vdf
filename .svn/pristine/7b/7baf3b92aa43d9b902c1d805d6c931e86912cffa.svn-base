package com.xiaoxun.xun.google;

import android.app.Activity;
import android.content.Intent;
import androidx.annotation.NonNull;
import android.util.Log;

import com.google.android.gms.auth.api.signin.GoogleSignIn;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInClient;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;

public class GoogleLoginManager {

    private volatile static GoogleLoginManager sInstance;
    private GoogleSignInClient mGoogleSignInClient;
    private OnLoginSuccessListener onLoginSuccessListener;
    public static final int RC_SIGN_IN = 1;

    private GoogleLoginManager() {

    }

    public static GoogleLoginManager getInstance() {
        if (sInstance == null) {
            synchronized (GoogleLoginManager.class) {
                if (sInstance == null) {
                    sInstance = new GoogleLoginManager();
                }
            }
        }
        return sInstance;
    }

    public void initGoogleLoginManger(Activity activity, OnLoginSuccessListener listener) {
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestProfile()
                .requestEmail().build();
        mGoogleSignInClient = GoogleSignIn.getClient(activity, gso);
        onLoginSuccessListener = listener;
    }

    public void signIn(Activity activity) {
        GoogleSignInAccount account = GoogleSignIn.getLastSignedInAccount(activity);
        if (account != null) {
            if (onLoginSuccessListener != null) {
                onLoginSuccessListener.onSuccess(account);
            }
        } else {
            Intent signInIntent = mGoogleSignInClient.getSignInIntent();
            activity.startActivityForResult(signInIntent, RC_SIGN_IN);
        }
    }

    public void signOut(Activity activity) {
        mGoogleSignInClient.signOut().addOnCompleteListener(activity, new OnCompleteListener<Void>() {
                    @Override
                    public void onComplete(@NonNull Task<Void> task) {
                    }
                });
    }

    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == RC_SIGN_IN) {
            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);
            handleSignInResult(task);
        }
    }

    private void handleSignInResult(Task<GoogleSignInAccount> completedTask) {
        try {
            GoogleSignInAccount account = completedTask.getResult(ApiException.class);
            if (onLoginSuccessListener != null) {
                onLoginSuccessListener.onSuccess(account);
            }
        } catch (ApiException e) {
            Log.w("GoogleLoginManger", "signInResult:failed code=" + e.getStatusCode() + " " + e.getMessage());
            if (onLoginSuccessListener != null) {
                onLoginSuccessListener.onFailure();
            }
        }
    }
}
